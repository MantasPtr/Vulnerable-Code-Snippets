1. **Cross-Site Scripting (XSS) Vulnerability**
   - **Description**: The code directly injects user input into the HTML response without sanitization. This can lead to XSS attacks where malicious scripts are executed in the browser of anyone viewing the affected page.
   - **Severity Level**: High
   - **Line Number and Content**: 
     ```javascript
     res.send('<h1> Hello :'+ name +"</h1>")
     ```

2. **Implicit Global Variable**
   - **Description**: The variable `name` is used without declaration in the `/greet-template` route, which implicitly creates a global variable. This can lead to unexpected behavior and bugs, especially in larger applications where variable scope is important.
   - **Severity Level**: Medium
   - **Line Number and Content**:
     ```javascript
     name = req.query.name
     ```

To address these issues:
- For the XSS vulnerability, sanitize the `name` variable before embedding it into the HTML response or use templating engines that automatically handle escaping.
- Declare the `name` variable with `const` or `let` to avoid creating a global variable.
